version: '3.8'

services:
  # Serviço A - Recebe requisições do cliente
  service-a:
    build:
      context: ./service-a
      dockerfile: Dockerfile
    container_name: service-a
    ports:
      - "8080:8080"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - otel-collector
      - service-b
    networks:
      - app-network

  # Serviço B - Busca CEP e temperatura
  service-b:
    build:
      context: ./service-b
      dockerfile: Dockerfile
    container_name: service-b
    ports:
      - "8081:8081"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - otel-collector
    networks:
      - app-network

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector:0.91.0
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
    depends_on:
      - zipkin
    networks:
      - app-network

  # Zipkin - Interface de visualização de traces
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
